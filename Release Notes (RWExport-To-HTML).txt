Release Notes for RWExport-To-HTML.ps1
by EightBitz

=====================================================
Version 0.8a (2017-01-24, 05:00 AM CST)
=====================================================

RWExportGUI.ps1:
   I've put together another script that serves as a GUI front end for the main script.
   The code for the GUI script was mostly borrowed and adapted. The original source had the following header:
   ########################################################################
   # Code Generated By: SAPIEN Technologies PrimalForms (Community Edition) v1.0.8.0
   # Generated On: 7/3/2011 11:35 AM
   # Generated By: sean.kearney
   ########################################################################

Licensing:
   RWExport-To-HTML.ps1 is now licensed under the Creative Commons Attribution license
   (I'm removing the non-commercial restriction.)
   
   Basically, that means:
      -You are free to share and adapt the script.
      -When sharing the script, you must give appropriate credit and indicate if changes were made.

   Summary: https://creativecommons.org/licenses/by/4.0/
   Legal Code: https://creativecommons.org/licenses/by/4.0/legalcode

New command line options:
   -KeepStyles
   -CSSFileName

   By default, text formatting is partially stripped. This is done to allow more uniform controll of text formatting through the CSS file.
   If you wish to preserve your original formatting, include -KeepStyles on your command line.
   Right now, the affected formatting elements are: font, font size, font color and background color.
   Other formatting (bold, italic, underline, etc) will be preserved.
   
   If you want to define a different CSS filename for each export, you can do that now.
   Include -CSSFileName on your command line, followed by the name of the file.
   Note that this option does NOT create the file. It merely specifies in the header of the HTML output. You will have to copy the main.css file, and rename the copy accordingly.

Stat Blocks:
   HTML stat blocks are now also controlled by CSS. I was able to figure how to strip the previously defined formatting without breaking all the other formatting.

Other CSS Changes:
   Tables are newly stripped of the previously defined formatting as well.
   A new section for tables has been added to the main.css file to accomodate.

Other Improvements:
   Addressed a cosmetic issue where "Label:" and "Annotation:" were displaying when there was no accompanying text.
   Now, if a label is empty, you won't see "Label:" on an otherwise empty line, and if an annotation is empty, you won't see "Annotation:" on an otherwise empty line.

Issues:
   I looked into an issue where Wingdings characters were not displaying properly, only to find out that supporting Wingdings is not part of the HTML Standard.
   There are unicode equivalents, but building that translation table, and parsing the XML code for where to place substititons is more work than I want to do right now, and I don't think it's going to be a common enough issue to make it worthwhile.

   The logging option is still not really functional.

Bug Fixes:
   It looks like the "Stream was not readable" error is indeed fixed. Since applying the fix in the last version, I have not seen it reappear.

=====================================================
Version 0.7a (2017-01-21, 06:40 AM CST)
=====================================================

Licensing:
   This script is now licensed under the Creative Commons Attribution + Non-Commercial license.
   
   Basically, that means:
      -You are free to share and adapt the script.
      -When sharing the script, you must give appropriate credit and indicate if changes were made.
      -You may not use the material for commercial purposes.

   Summary: https://creativecommons.org/licenses/by-nc/4.0/
   Legal Code: https://creativecommons.org/licenses/by-nc/4.0/legalcode

New command line options:
   -Details
   -SeparateSnippets

   Topic details (Category, Parent, Linkage, Tags, etc ...) are no longer included by default. The topic details are nice for reference, but the document looks more presentable without them. If you're planning to share or publish, you may not want them in there at all. However,  if you do, you can use the -Details option to put them back in.

   Some snippets are longer, and some are shorter. Some are grouped and some are not. If you want a visual separator to show where one snippet ends and another begins, you can use the -SeparateSnippets option.
stream was not readable

Stat Blocks:
   Inline statblocks are a lot cleaner now. They display the way they're supposed to display.
   
   For non-HTML stat blocks, you can change their formatting in the main.css file.
   
   HTML stat blocks are an exception, because they have inline CSS formatting. At this point I am concerned about the unintended consequences of programmatically stripping that out, regardless of how good my intentions may be.
   
   If I find a good way to include affet HTML stat blocks, I will make that change. That being said, HTML stat blocks display fine. They're just unaffected by changes in the CSS file.

   The original font size for stat blocks was 9 points. I had to squint to read that, so in the main.css file, I changed it to 12. If you click the link for the stat block, you'll see it in its original form, and you'll see the difference. If you like it at 9 points, you can easily make that change in the main.css file.

Other CSS Changes:
   I discovered that lists were not effected by the definition for regular snippets, so I added two new CSS definitions. One for bulleted lists and one for numbered lists

Other Improvements:
   I added input validation and error checking to make sure that the script does not attempt to run with invalid options. If an input file cannot be read, or an output file cannot be written, or a sort value is out of range, the script will report the error and exit.

   This is prelude for better error trapping overall and for proper logging of errors to aid in future troubleshooting and debugging. The error trapping and logging were what I was originally planning to include in this release, but one thing after another took hold, and I figured people would appreciate the new changes and functionality.

Bug fixes:
   Fixed an issue where snippets that contain both GM directions and regular text were not being properly handled.

   Fixed some superficial, but nagging bugs. If you previously got a stream of errors reporting that certain functions or methods could not be called on a null value, those should be fixed in this version.

   For display purposes, I was appending a colon (:) to snippets that had labels that did not already end with a colon. I fixed an issue were the colon was showing up even if there was no text in the label.

   I have hopefully fixed an intermittent "Stream was not readable" error. It looks like the fix worked, but since it was intermittent, I can't say for sure. All I can say is that I have not had the error since applying a suggested fix.

Get-Help:
   I have updated the Get-Help info as well, so you can see all the available command line options, what they do, and some examples of how to use them.

   To use Get-Help, open a PowerShell window, and CD to the folder where you've saved the script. Then type any one of the following commands:

   Get-Help .\RWExport-To-HTML.ps1
   Get-Help .\RWExport-To-HTML.ps1 -examples
   Get-Help .\RWExport-To-HTML.ps1 -detailed
   Get-Help .\RWExport-To-HTML.ps1 -full

   Furthermore, you can send the results of any one of those commands to a text file.

   Get-Help C:\<full path>\RWExport-To-HTML.ps1 -full > Full-Help-for-RWExport.txt

   That will create the indicated text file that will contain the results of the Get-Help command, and you can just keep that handy somewhere.


=====================================================
Version 0.6a (2017-01-19, 04:40 AM CST)
=====================================================

SHOW ALL THE SNIPPETS:
Added at least a listing of all snippet types. If the snippet is there, you will at least see its name and type.

IMAGES:
Added support for displaying images. Thumbnails display by default, but you can display a larger view with two new command line options.
   -SimpleImageScale 20
   -SmartImageScale 75
These work by percentages. So with the above examples, simple pictures will display at 20% of their full size, and smart images at 75%.

In both cases, the image name will be followed by a clickable link to display the image in full size.

STAT BLOCKS:
Stat blocks can now be viewed. By default, there is a clickable link after the name. If you would prefer, there is an option to display stat blocks inline.
   -InlineStats
It's not always going to look pretty, but it's there. The clickable links will usually display cleaner versions.

HELP! WHAT DO I DO! HELP!
I polished the Get-Help info. Any time you want to know what options are available and how they work, you can use the following commands:

Get-Help C:\<full path>\RWExport-To-HTML.ps1
Get-Help C:\<full path>\RWExport-To-HTML.ps1 -examples
Get-Help C:\<full path>\RWExport-To-HTML.ps1 -detailed
Get-Help C:\<full path>\RWExport-To-HTML.ps1 -full

Furthermore, you can send the results of any one of those commands to a text file.

Get-Help C:\<full path>\RWExport-To-HTML.ps1 -full > Full-Help-for-RWExport.txt

That will create the indicated text file that will contain the results of the Get-Help command, and you can just keep that handy somewhere.

=====================================================
Version 0.5a (RWExport-to-HTML.ps1)
=====================================================
These are the release notes for the HTML version.
Most everything is the same, which is why I'm including the previous release notes for the text version.

The differences here are:
   The obvious: HTML formatting.
   With the HTML formatting comes and added CSS file, main.css.
   main.css should always be in the same folder as the HTML output, otherwise the output will not be properly formatted.
   There is also now an -Indent option which, if invoked, will indent nested topics and sections.

If you lose your main.css file, see the sample below:

/* Beginning of main.css file */

/*
This file must accompany the resulting HTML file
as it defines the formatting of the HTML file.
If you know CSS, feel free to modify these definitions
To your liking.
*/

/* Title */
H1 {
   font-weight:bold;
   color:#000000;
   letter-spacing:1pt;
   word-spacing:2pt;
   font-size:30px;
   text-align:center;
   font-family:helvetica, sans-serif;line-height:1;
   margin:0px;
   padding:10px;
}

/* Topic Name */
H2 {
   font-weight:bold;
   color:#000000;
   background-color:#CCCCCC;
   letter-spacing:1pt;
   word-spacing:2pt;
   font-size:25px;
   text-align:left;
   font-family:helvetica, sans-serif;line-height:1;
   margin:0px;
   padding:10px;
}

/* Topic Details (Category, Parent, Linkage ...)*/
H3 {
	 font-weight:normal;
   font-family:helvetica, sans-serif;line-height:1;
   font-size: 16px;
   font-style: italic;
   color: black;
   background-color:#CCCCCC;
   padding:10px;
}

/* Section Header */
H4 {
	 font-weight:normal;
	 text-decoration:underline;
   font-family:helvetica, sans-serif;line-height:1;
   font-size: 20px;
   background: #ffffff;
   color: black;
}

/* Snippet */
P {
   font-family:helvetica, sans-serif;line-height:1;
   font-size: 16px;
   background: #ffffff;
   color: black;
}
/* End of main.css file */

=====================================================
Version 0.5a
=====================================================
Added a -Prefix switch to optionally include a topic's prefix.
Added a -Suffix switch to optionally include a topic's suffix.
Added a -Sort option to sort topics by:
   1 = Name
   2 = Prefix, Name **Default**
   3 = Category, Name
   4 = Category, Prefix, Name

   Choosing options 2 or 4 will sort by prefix, regardless of whether or not
   the -Prefix switch is specified. Likewise, choosing options 1 or 3 will
   sort by name, regardless of whether or not the -Prefix switch is specified.

Added parentage for topics.
Made the topic suffix parenthetical so it's consistent with the display in RW.

Better (I hope) parsing of snippets, and support for more types.

Supported snippet types include:
Text (Including lists and tables, but NOT including any formatting such as bold, italic, highlights, etc.)
GM Directions
Labeled Text
Tags
Calendar Date
Calendar Date Range
Numeric Value
Tags (MultiDomain)

Unsupported snippet types include:
** Picture (Simple)
** Smart Image (Map)
XX Statblock
XX Hero Lab Portfolio
Foreign Object
Any snippet types listed under "Documents and Media"


=====================================================
Version 0.01a
=====================================================
- I am not well-versed in translating XML via XLST or CSS, so I'm working with what I know, and right now, that's PowerShell. I know there are probably 50 different ways that this could have been done better, and I know that there are a few people here who know all those ways, but alas, I'm stuck with what I know.

- In regards to the above, I'm not sharing this to impress anyone. I just want a simple, easy way to print, and I thought I would share this with anyone else who might want the same and who also isn't skilled with XLST and CSS.

- I'm mainly working on this for myself, because I want a way to print. If you like what you see, and you wish to request a change or a feature, I will do what I can, but understand that this is not my full-time job. In fact, I do not currently have a full-time job, nor any job, so my full-time job right now is to find a full-time job.

- This is a work in progress.

- I have tested multiple conditions, but only with small, simple exports.

- This will only process a compact export, not a full export. I'm not even going to mess with a full export.

- Right now, this is intended to process plain-text and tag-based snippets. It will not do anything with images, simple or smart. I have not tested how it handles tables or anything other than plain-text.

- The output, right now, is plain text. I would like to add CSS and HTML formatting, but right now, I wanted to get some basic functionality done first. And I still have to study up on CSS and HTML.

- The advantage with doing this through a procedural or scripting language is that I have finer control in what information to extract and how. The disadvantage is that it could take a while to run through a 5 GB realm. I'm not there yet, so I can't say for sure, though. But I'm guessing it will.

- I'm tired and I'm going to sleep. I hope this helps somebody. :-)

- Feel free to comment here or send me a PM, but just to preempt any questions of "Why did you do it this way when you could have done it this other and much better way?", the answer is, "Because this is the way I know how to do it."

